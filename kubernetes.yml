apiVersion: v1
kind: Namespace
metadata:
  name: todos
  labels:
    name: todos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: todos
  name: db
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - image: postgres:13.2-alpine
        envFrom:
        - secretRef:
            name: postgres
        env:
        - name: POSTGRES_DB
          value: todos
        name: db
        ports:
        - containerPort: 5432
          protocol: TCP
        resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: todos
  name: db-service
spec:
  selector:
    app: db
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: todos
  name: api
  labels:
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - image: todos-api:latest
        envFrom:
        - secretRef:
            name: postgres
        env:
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://db-service:5432/todos"
        - name: JAVA_OPTS
          value: "-Xms50M -Xmx100M"
        imagePullPolicy: IfNotPresent
        name: api
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: todos
  name: api-service
spec:
  selector:
    app: api
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  namespace: todos
  name: ui
  labels:
    app: ui
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: ui
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ui
    spec:
      containers:
      - image: todos-ui:latest
        env:
        - name: VUE_APP_BACKEND_URL
          value: "http://localhost/api/"
        - name: PORT
          value: "8081"
        imagePullPolicy: IfNotPresent
        name: ui
        ports:
        - containerPort: 8081
          protocol: TCP
        resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  namespace: todos
  name: ui-service
spec:
  selector:
    app: ui
  ports:
  - port: 8081
    protocol: TCP
    targetPort: 8081
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: todos
  name: ingress
  annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - pathType: ImplementationSpecific
        # path: /
        backend:
          service:
            name: ui-service
            port:
              number: 8081
      - pathType: Prefix
        path: /api/
        backend: 
          service:
            name: api-service
            port:
              number: 8080
      - pathType: Prefix
        path: /js/
        backend:
          service:
            name: ui-service
            port:
              number: 8081
---
